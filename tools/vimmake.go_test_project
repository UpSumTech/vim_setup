#!/usr/bin/env bash
set -e
set -o pipefail

#########################################################
################### Helper functions ####################
#########################################################
export PID="$$" # Get parent pid so that you can kill the main proc from subshells
err() {
  echo >&2 "Error : $@"
  kill -s TERM $PID
  exit 1
}

function wrap_around_dir_change() {
  local fn="$1"
  shift 1
  pushd .
  eval "$(declare -F "$fn")" "$@"
  popd
}

#########################################################
################### High level fn #######################
#########################################################
function run_go_tests_for_project() {
  cd "$VIM_FILEDIR"
  while [[ ! $(find . -maxdepth 1 -type d | grep '.git') =~ './.git' && ! $(basename $(cd $PWD/../.. && pwd)) =~ (github.com|golang.org|google.golang.org|gopkg.in) ]]; do
    cd ..
  done
  echo "Reached root of project at : $(pwd)"
  echo "Running tests"
  go test -v $(go list ./...| grep -v utils | grep -v vendor) || die "Tests did not pass"
}

#########################################################
###################### Entrypoint #######################
#########################################################
main() {
  wrap_around_dir_change run_go_tests_for_project
}

[[ "$BASH_SOURCE" == "$0" ]] && main "$@"
